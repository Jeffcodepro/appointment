class Service < ApplicationRecord
  belongs_to :user

  monetize :price_hour_cents
  has_many :conversations, dependent: :destroy

  CATEGORIES = [
    "ServiÃ§os DomÃ©sticos", "Reparos e ManutenÃ§Ã£o", "SaÃºde e Bem-Estar",
    "Aulas e Cursos", "Consultoria", "Eventos",
    "ServiÃ§os de SaÃºde e EstÃ©tica", "ServiÃ§os Automotivos"
  ].freeze

  SUBCATEGORIES = {
    "ServiÃ§os DomÃ©sticos" => ["Limpeza", "Jardinagem", "Cozinhar"],
    "Reparos e ManutenÃ§Ã£o" => ["ElÃ©trica", "HidrÃ¡ulica", "Pintura", "Montagem de MÃ³veis"],
    "SaÃºde e Bem-Estar" => ["Massagem", "Personal Trainer", "Fisioterapia"],
    "Aulas e Cursos" => ["MÃºsica", "Idiomas", "Artes Marciais"],
    "Consultoria" => ["Financeira", "TecnolÃ³gica", "Marketing"],
    "Eventos" => ["Fotografia", "Catering", "DecoraÃ§Ã£o"],
    "ServiÃ§os de SaÃºde e EstÃ©tica" => ["Dentista", "Cabeleireiro", "Barbeiro", "Manicure"],
    "ServiÃ§os Automotivos" => ["MecÃ¢nica", "Lavagem", "Funilaria", "Pintura"]
  }.freeze

  include PgSearch::Model
  pg_search_scope :global_search,
                  against: [:name, :description], # campos da service
                  associated_against: {
                    user: [:name, :city, :state]  # ðŸ‘ˆ busca tambÃ©m no usuÃ¡rio
                  },
                  using: {
                    tsearch: { prefix: true }
                  }

  # ðŸ”‘ sempre incluir join de users
  scope :with_user, -> { joins(:user) }


end

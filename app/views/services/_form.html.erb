<div class="container">
  <h2>Novo serviço</h2>

  <%= form_with model: @service, data: { turbo: true } do |f| %>
  <div class="mb-3">
    <%= f.label :name, "Nome do serviço" %>
    <%= f.text_field :name, class: "form-control", required: true %>
  </div>

  <div class="mb-3">
    <%= f.label :category, "Categoria" %>
    <%= f.text_field :category, class: "form-control", placeholder: "ex.: Cabeleireiro" %>
  </div>

  <div class="mb-3">
    <%= f.label :description, "Descrição" %>
    <%= f.text_area :description, class: "form-control", rows: 3 %>
  </div>

  <hr class="my-4">

  <h5>Procedimentos (subcategorias)</h5>

  <div id="subcategories-list">
    <%= f.fields_for :service_subcategories do |sf| %>
      <%= render "services/subcategory_fields", f: sf %>
    <% end %>
  </div>

  <div class="mt-3">
    <button type="button" id="add-subcategory" class="btn btn-outline-primary">
      Adicionar procedimento
    </button>
  </div>

  <div class="mt-4">
    <%= f.submit class: "btn btn-primary" %>
    <%= link_to "Cancelar", (@service.persisted? ? service_path(@service) : services_path), class: "btn btn-secondary ms-2" %>
  </div>

  <!-- Template escondido para novas linhas -->
  <template id="subcategory-template">
    <%= form_fields = f.fields_for(:service_subcategories, ServiceSubcategory.new, child_index: "NEW_RECORD") do |sf| %>
      <%= render "services/subcategory_fields", f: sf %>
    <% end %>
  </template>
<% end %>

<script>
  (function() {
    const addBtn = document.getElementById("add-subcategory");
    if (!addBtn) return;

    addBtn.addEventListener("click", () => {
      const tpl = document.getElementById("subcategory-template");
      const target = document.getElementById("subcategories-list");
      if (!tpl || !target) return;

      const timestamp = Date.now();
      const html = tpl.innerHTML.replace(/NEW_RECORD/g, timestamp);
      target.insertAdjacentHTML("beforeend", html);
    });

    document.addEventListener("click", (e) => {
      const btn = e.target.closest("[data-remove-subcategory]");
      if (!btn) return;

      const wrapper = btn.closest("[data-subcategory-wrapper]");
      if (!wrapper) return;

      const destroyField = wrapper.querySelector("input[name*='[_destroy]']");
      if (destroyField) {
        // Persistente: marca _destroy = 1 e oculta
        destroyField.value = "1";
        wrapper.style.display = "none";
      } else {
        // Novo (não salvo): remove do DOM
        wrapper.remove();
      }
    });
  })();
</script>

</div>
